{"version":3,"sources":["mock-data.js","api.js","Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","JSON","parse","stringify","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","location","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","extractLocations","events","map","event","Set","getEvents","NProgress","start","startsWith","done","token","removeQuery","url","locations","setItem","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","Event","state","showDetails","handleToggleDetails","details","setState","this","props","className","summary","dateTime","timeZone","onClick","Component","EventList","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","eventCount","handleCountChange","count","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.f362224b.chunk.js","sourcesContent":["const mockData = JSON.parse(JSON.stringify(\n  [\n    {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181161784712000\\\"\",\n      \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:17:46.000Z\",\n      \"updated\": \"2020-05-27T12:01:32.356Z\",\n      \"summary\": \"Learn JavaScript\",\n      \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n      \"location\": \"London, UK\",\n      \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n      },\n      \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n      },\n      \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n      \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n      \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n    },\n    {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181159875584000\\\"\",\n      \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:14:30.000Z\",\n      \"updated\": \"2020-05-27T11:45:37.792Z\",\n      \"summary\": \"React is Fun\",\n      \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n      \"location\": \"Berlin, Germany\",\n      \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n      },\n      \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n      },\n      \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n      \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n      \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n    }\n  ]\n));\n\nexport { mockData };","/*\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nimport { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        'https://ixc0n21qu3.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://ixc0n21qu3.execute-api.us-west-2.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://ixc0n21qu3.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    showDetails: false\n  }\n\n  // UGLY - can this be simplified?\n  handleToggleDetails = (details) => {\n    if(this.state.showDetails === false) {\n      this.setState({\n        showDetails: true\n      });\n    } else {\n      this.setState({ \n        showDetails: false \n      });\n    }\n  }\n\n  render() {\n    const showDetails = this.state.showDetails;\n    const { event } = this.props;\n\n    return (\n      <div className='event'>\n        <div className='overview'>\n          <h3>{event.summary}</h3>\n          <p className='location'>{event.location}</p>\n          <p className='start-date'>{event.start.dateTime} ({event.start.timeZone})</p>\n          <button \n            className='show-details'\n            onClick={this.handleToggleDetails}\n          >See Details</button>\n        </div>\n        <div>\n          <button \n            className='hide-details'\n            onClick={this.handleToggleDetails}\n          >Hide Details</button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className='EventList'>\n        {events.map(event => \n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({ \n      query: value,\n      suggestions,\n    });\n  }\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className='CitySearch'>\n        <input\n          type='text'\n          className='city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className='suggestions' style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li \n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li \n            key='all'\n            onClick={() => this.handleItemClicked(\"all\")}\n          >\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    eventCount: 32\n  }\n\n  handleCountChange = (count) => {\n    const value = count.target.value;\n    this.setState({ \n      eventCount: value\n    });\n  }\n\n  render() {\n    return (\n      <div className='NumberOfEvents'>\n        <label className='event-count-label'>Number of Events in View:</label>\n        <input\n            type='text'\n            className='event-count'\n            value={this.state.eventCount}\n            onChange={this.handleCountChange}\n          />\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport { getEvents, extractLocations } from './api';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents}/>\n        <EventList events={this.state.events} />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}